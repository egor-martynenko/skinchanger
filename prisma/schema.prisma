generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id String @id @default(uuid())

  email    String    @unique
  password String
  role     UserRole  @default(USER)
  verified DateTime?

  cart             Cart?
  orders           Order[]
  verificationCode VerificationCode?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id             String        @id @default(uuid())
  name           String
  status         ProductStatus
  imageUrl       String[]
  price          Int
  isNew          Boolean
  discount       Boolean
  specifications Json
  tags           String[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  Cart   Cart?   @relation(fields: [cartId], references: [id])
  cartId String?
}

model Cart {
  id String @id @default(uuid())

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @unique

  items Product[]

  token String

  totalAmount Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id String @id @default(uuid())

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  token String

  totalAmount Int
  status      OrderStatus
  paymentId   String?

  items Json

  email   String
  comment String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationCode {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  code String @unique

  createdAt DateTime @default(now())

  @@unique([userId, code])
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CANCELLED
}

enum ProductStatus {
  AVAILABLE
  BOOKED
  SOLD
}

enum UserRole {
  USER
  ADMIN
}
